import Head from "next/head";
import { getSession, useSession } from "next-auth/react";
import { prisma } from "~/server/db";
import axios from "axios";
import type { GetServerSidePropsContext, NextPage } from "next";
import type { Bet } from "@prisma/client";

type Props = {
  balance: number;
  bets: Bet[];
};

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const session = await getSession(context);
  if (!session) {
    return {
      redirect: {
        destination: "/auth/signin",
      },
    };
  }

  const bets = await prisma.bet.findMany({
    where: {
      userId: session.user.id,
    },
    orderBy: {
      createdAt: "desc",
    },
  });

  const res: {
    data: {
      user: {
        balance: number;
      };
    };
  } = await axios.get(
    `${process.env.NEXTAUTH_URL as string}/api/user/${session.user.id}`
  );

  return {
    props: {
      balance: res.data.user.balance,
      bets: JSON.parse(JSON.stringify(bets)) as Bet[],
    },
  };
};

const Profile: NextPage<Props> = ({ balance, bets }) => {
  const { data: session } = useSession();

  return (
    <>
      <Head>
        <title>Roulettor.com</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen flex-col items-center justify-center gap-4">
        <div className="btn-group btn-group-vertical md:btn-group-horizontal">
          <button className="btn-outline btn pointer-events-none">
            ID: {session?.user ? session.user.id : "Loading..."}
          </button>
          <button className="btn-outline btn pointer-events-none">
            Email: {session?.user ? session.user.email : "Loading..."}
          </button>
          <button className="btn-outline btn pointer-events-none">
            Balance: {balance || balance === 0 ? balance : "Loading..."}
          </button>
        </div>
        ID: {session?.user ? session.user.id : "Loading..."}
        <div className="divider" />
        <div className="w-full overflow-x-auto">
          <table className="table-compact table w-full">
            <thead>
              <tr>
                <th></th>
                <th>Transaction ID</th>
                <th>Date</th>
                <th>Color</th>
                <th>Amount</th>
                <th>Game ID</th>
              </tr>
            </thead>
            <tbody>
              {bets.map((b) => (
                <tr key={b.id}>
                  <th></th>
                  <td>{b.id}</td>
                  <td>
                    {new Date(b.createdAt.toString()).toLocaleDateString()}
                  </td>
                  <td>{b.betColor}</td>
                  <td>{b.betAmount}</td>
                  <td>{b.gameId}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
};

export default Profile;
